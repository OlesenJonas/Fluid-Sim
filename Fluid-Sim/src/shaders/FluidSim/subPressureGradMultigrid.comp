//pressure gradient subtraction shader

#version 450

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

#ifndef FORMAT
    #define FORMAT rgba16f
#endif

uniform layout (binding = 0) sampler3D pressure;
uniform layout (binding = 1) sampler3D velocityIn;
uniform layout(FORMAT, binding = 0) writeonly restrict image3D velocityOut;

void main() 
{
    ivec3 texelPos = ivec3(gl_GlobalInvocationID);
    ivec3 texSize = imageSize(velocityOut);
    if(texelPos.x < texSize.x 
    && texelPos.y < texSize.y 
    && texelPos.z < texSize.z
    )
    {
        float xprev_yprev_zprev = texelFetchOffset(pressure, texelPos, 0, ivec3( 0, 0, 0)).x;
        float xprev_yprev_znext = texelFetchOffset(pressure, texelPos, 0, ivec3( 0, 0, 1)).x;
        float xprev_ynext_zprev = texelFetchOffset(pressure, texelPos, 0, ivec3( 0, 1, 0)).x;
        float xprev_ynext_znext = texelFetchOffset(pressure, texelPos, 0, ivec3( 0, 1, 1)).x;
        float xnext_yprev_zprev = texelFetchOffset(pressure, texelPos, 0, ivec3( 1, 0, 0)).x;
        float xnext_yprev_znext = texelFetchOffset(pressure, texelPos, 0, ivec3( 1, 0, 1)).x;
        float xnext_ynext_zprev = texelFetchOffset(pressure, texelPos, 0, ivec3( 1, 1, 0)).x;
        float xnext_ynext_znext = texelFetchOffset(pressure, texelPos, 0, ivec3( 1, 1, 1)).x;

        float xprev = 0.25*(xprev_yprev_zprev + xprev_yprev_znext + xprev_ynext_zprev + xprev_ynext_znext);
        float xnext = 0.25*(xnext_yprev_zprev + xnext_yprev_znext + xnext_ynext_zprev + xnext_ynext_znext);

        float yprev = 0.25*(xprev_yprev_zprev + xprev_yprev_znext + xnext_yprev_zprev + xnext_yprev_znext);
        float ynext = 0.25*(xprev_ynext_zprev + xprev_ynext_znext + xnext_ynext_zprev + xnext_ynext_znext);

        float zprev = 0.25*(xprev_yprev_zprev + xprev_ynext_zprev + xnext_yprev_zprev + xnext_ynext_zprev);
        float znext = 0.25*(xprev_yprev_znext + xprev_ynext_znext + xnext_yprev_znext + xnext_ynext_znext);

        vec3 velocityMask = vec3(1.0);
        // this can probably be done smarter with the boolean vector ops?
        if(texelPos.x == 0 || texelPos.x == texSize.x-1)
        {
            velocityMask.x = 0;
        }
        if(texelPos.y == 0 || texelPos.y == texSize.y-1)
        {
            velocityMask.y = 0;
        }
        if(texelPos.z == 0 || texelPos.z == texSize.z-1)
        {
            velocityMask.z = 0;
        }
        
        const float deltaX = 1.0/texSize.x;
        const float deltaY = 1.0/texSize.y;
        const float deltaZ = 1.0/texSize.z;

        vec3 gradient = vec3(
            (xnext - xprev)/(deltaX),
            (ynext - yprev)/(deltaY),
            (znext - zprev)/(deltaZ));
        
        vec3 oldVel = texelFetch(velocityIn, texelPos, 0).xyz;
        vec3 newVel = oldVel - gradient;
        newVel = velocityMask*newVel;

        imageStore(velocityOut, texelPos, vec4(newVel, 0.0));
    }
}
